#!/usr/bin/env ruby
require 'gli'
require "rack"
require "staticd/version"

include GLI::App

program_desc 'Staticd API and HTTP server'

version Staticd::VERSION

subcommand_option_handling :normal
arguments :strict

# Global Options
# --------------

# Commands
# --------

desc 'Start the staticd API and HTTP server'
command :"server" do |c|
  c.switch [:"api"], desc: "Enable the API service" , default_value: false
  c.switch [:"http"], desc: "Enable the HTTP service", default_value: true
  c.action do |global_options,options,args|

  ENV["STATICD_API_ENABLED"] = "true" if options[:api]
  ENV["STATICD_HTTP_ENABLED"] = "true" if options[:http]

  Rack::Server.start(
    config: "#{File.dirname(__FILE__)}/../config.ru",
    server: "puma",
    port: ENV["PORT"] || "8080",
    environment: ENV["RACK_ENV"] == "production" ? :deployment : :development
  )
  end
end

# Hooks
# -----

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  # true
  raise exception
end

exit run(ARGV)
