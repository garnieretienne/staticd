#!/usr/bin/env ruby
require 'gli'
require 'staticdctl'
require 'staticd_utils/archive'

include GLI::App

program_desc 'Describe your application here'

version Staticdctl::VERSION

subcommand_option_handling :normal
arguments :strict

# Global Options
# --------------

desc 'Staticd API endpoint'
default_value "localhost:4567/api"
arg_name 'Staticd API endpoint'
flag [:h, :host]

desc 'Site name'
default_value File.basename(Dir.pwd)
arg_name 'Site name'
flag [:s, :site]

# Commands
# --------

desc 'List all sites'
command :sites do |c|
  c.action do |global_options,options,args|

    staticd_api = Staticdctl::RESTClient.new global_options[:host]
    staticd_api.call :get, "/sites" do |data|
      puts "Sites hosted on #{global_options[:host]}:"
      data.each do |site_name|
        puts "* #{site_name}"
      end
    end
  end
end

desc 'Create a new site'
command :"sites:create" do |c|
  c.action do |global_options,options,args|

    staticd_api = Staticdctl::RESTClient.new global_options[:host]
    staticd_api.call :post, "/sites", {
      name: global_options[:name]
    } do |data|
      puts "#{data['name']} has been created."
    end
  end
end

desc 'Attach a domain name to a site'
arg_name 'domain_name'
command :"domains:attach" do |c|
  c.action do |global_options,options,args|

    staticd_api = Staticdctl::RESTClient.new global_options[:host]
    staticd_api.call :post, "/sites/#{global_options[:site]}/domain_names", {
      name: args.first
    } do |data|
      puts "#{data['name']} has been attached to #{data['site_name']}"
    end
  end
end

desc 'List all domain attached to the current site'
command :domains do |c|
  c.action do |global_options,options,args|

    staticd_api = Staticdctl::RESTClient.new global_options[:host]
    staticd_api.call :get, "/sites/#{global_options[:site]}/domain_names" do
        |data|
      puts "Domain names attached to #{global_options[:site]}:"
      data.each do |domain_name|
        puts "* #{domain_name}"
      end
    end
  end
end

desc 'List all releases of the current site'
command :releases do |c|
  c.action do |global_options,options,args|

    staticd_api = Staticdctl::RESTClient.new global_options[:host]
    staticd_api.call :get, "/sites/#{global_options[:site]}/releases" do
        |data|
      puts "Releases of #{global_options[:site]}:"
      data.each do |tag|
        puts "* #{tag}"
      end
    end
  end
end

desc 'Push a new release for the current app'
arg_name '[path]'
command :push do |c|
  c.action do |global_options,options,args|

    print "Building the archive... "
    source_path = args.any? ? args.first : "."
    archive = StaticdUtils::Archive.create source_path
    base64 = archive.to_base64
    puts "done."

    staticd_api = Staticdctl::RESTClient.new global_options[:host]
    staticd_api.call :post, "/sites/#{global_options[:site]}/releases", {
      file: base64
    } do |data|
      puts "#{data["site_name"]} #{data["tag"]} received"
    end
  end
end

# Hooks
# -----

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
